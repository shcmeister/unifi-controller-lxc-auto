#!/bin/bash
set -euo pipefail

# –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞ –Ω–∞ –Ω–∞–π-–Ω–æ–≤–∞—Ç–∞ –≤–µ—Ä—Å–∏—è –Ω–∞ UniFi Network Controller
# –≤ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä, –±–∞–∑–∏—Ä–∞–Ω –Ω–∞ Debian/Ubuntu.
# –¢–æ–π —É–ø—Ä–∞–≤–ª—è–≤–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ç–∞ –Ω–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞, –∏–º–ø–æ—Ä—Ç–∏—Ä–∞–Ω–µ—Ç–æ –Ω–∞ GPG –∫–ª—é—á–æ–≤–µ, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏—Ç–µ –∏ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞ –Ω–∞ UniFi –ø–∞–∫–µ—Ç–∞.

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
MONGO_VERSION="7.0"

# --- –§—É–Ω–∫—Ü–∏–∏ ---

log_message() {
    echo "--- $(date +'%Y-%m-%d %H:%M:%S') --- $1"
}

check_root() {
    if [[ $EUID -ne 0 ]]; then
        log_message "–¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –∫–∞—Ç–æ root. –ú–æ–ª—è, –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ sudo –∏–ª–∏ –≤–ª–µ–∑—Ç–µ –∫–∞—Ç–æ root."
        exit 1
    fi
}

detect_distro_info() {
    if [ -f "/etc/os-release" ]; then
        . /etc/os-release
        DISTRO_ID=$ID
        DISTRO_CODENAME=$VERSION_CODENAME
    elif [ -f "/etc/debian_version" ]; then
        DISTRO_ID="debian"
        DISTRO_CODENAME=$(lsb_release -cs 2>/dev/null || echo "bookworm")
    else
        log_message "–ù–µ –º–æ–∂–µ –¥–∞ —Å–µ —Ä–∞–∑–ø–æ–∑–Ω–∞–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—è—Ç–∞. –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç –µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –∑–∞ Debian/Ubuntu."
        exit 1
    fi

    log_message "–†–∞–∑–ø–æ–∑–Ω–∞—Ç–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—è: $DISTRO_ID, –∫–æ–¥–æ–≤–æ –∏–º–µ: $DISTRO_CODENAME"

    if [[ "$DISTRO_ID" != "debian" && "$DISTRO_ID" != "ubuntu" ]]; then
        log_message "–ù–µ–ø–æ–¥–¥—ä—Ä–∂–∞–Ω–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—è: $DISTRO_ID. –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç –µ –∑–∞ Debian –∏–ª–∏ Ubuntu."
        exit 1
    fi
}

install_prerequisites() {
    log_message "–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ç–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª–Ω–∏ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è..."
    apt-get update
    apt-get install -y curl gnupg apt-transport-https wget lsb-release ca-certificates
    log_message "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª–Ω–∏—Ç–µ –∏–∑–∏—Å–∫–≤–∞–Ω–∏—è —Å–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏."
}

add_unifi_repo() {
    log_message "–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ UniFi —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ GPG –∫–ª—é—á..."
    local UNIFI_REPO_KEY_URL="https://dl.ui.com/unifi/unifi-repo.gpg"
    local UNIFI_REPO_FILE="/etc/apt/sources.list.d/100-ubnt-unifi.list"

    rm -f /etc/apt/sources.list.d/*ubnt*.list

    wget -qO - "$UNIFI_REPO_KEY_URL" | apt-key add -
    log_message "UniFi GPG –∫–ª—é—á –¥–æ–±–∞–≤–µ–Ω."

    echo "deb https://dl.ui.com/unifi/debian stable ubiquiti" | tee "$UNIFI_REPO_FILE" >/dev/null
    log_message "UniFi —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–æ–±–∞–≤–µ–Ω–æ."
}

add_mongodb_repo() {
    log_message "–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ MongoDB —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ GPG –∫–ª—é—á –∑–∞ –≤–µ—Ä—Å–∏—è $MONGO_VERSION..."

    local MONGO_REPO_KEY_URL="https://www.mongodb.org/static/pgp/server-$MONGO_VERSION.asc"
    local MONGO_REPO_FILE="/etc/apt/sources.list.d/mongodb-org-$MONGO_VERSION.list"

    rm -f /etc/apt/sources.list.d/*mongodb*.list

    wget -qO - "$MONGO_REPO_KEY_URL" | apt-key add -
    log_message "MongoDB GPG –∫–ª—é—á –¥–æ–±–∞–≤–µ–Ω."

    if [[ "$DISTRO_ID" == "ubuntu" ]]; then
        echo "deb [arch=amd64] https://repo.mongodb.org/apt/ubuntu $DISTRO_CODENAME/mongodb-org/$MONGO_VERSION multiverse" | tee "$MONGO_REPO_FILE" >/dev/null
    else
        echo "deb [arch=amd64] http://repo.mongodb.org/apt/debian $DISTRO_CODENAME/mongodb-org/$MONGO_VERSION main" | tee "$MONGO_REPO_FILE" >/dev/null
    fi
    log_message "MongoDB —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–æ–±–∞–≤–µ–Ω–æ."
}

perform_apt_update() {
    log_message "–ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ apt –∫–µ—à–∞ –∏ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ —Å–ø–∏—Å—ä—Ü–∏—Ç–µ —Å –ø–∞–∫–µ—Ç–∏..."
    apt-get clean
    apt-get update
    log_message "–°–ø–∏—Å—ä—Ü–∏—Ç–µ —Å –ø–∞–∫–µ—Ç–∏ —Å–∞ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–∏."
}

install_java() {
    log_message "–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ OpenJDK 17 JRE (–∏–∑–∏—Å–∫–≤–∞ —Å–µ –æ—Ç UniFi)..."
    apt-get install -y openjdk-17-jre-headless
    log_message "OpenJDK 17 JRE –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω."
}

install_unifi() {
    log_message "–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ UniFi Network Controller..."
    apt-get install -y unifi
    log_message "UniFi Network Controller –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ."
}

check_unifi_status() {
    if systemctl is-active --quiet unifi; then
        log_message "UniFi —É—Å–ª—É–≥–∞—Ç–∞ —Ä–∞–±–æ—Ç–∏ –Ω–æ—Ä–º–∞–ª–Ω–æ."
    else
        log_message "–í–Ω–∏–º–∞–Ω–∏–µ: UniFi —É—Å–ª—É–≥–∞—Ç–∞ –Ω–µ —Ä–∞–±–æ—Ç–∏ –∏–ª–∏ –∏–º–∞ –ø—Ä–æ–±–ª–µ–º."
    fi
}

print_final_info() {
    sleep 10
    CONTAINER_IP=$(hostname -I | awk '{print $1}')
    log_message "\033[1;32m‚úÖ –ò–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞ –Ω–∞ UniFi Controller –µ –∑–∞–≤—ä—Ä—à–µ–Ω–∞ –∏ —Ä–∞–±–æ—Ç–∏!\033[0m"
    log_message "–ú–æ–∂–µ—Ç–µ –¥–∞ –¥–æ—Å—Ç—ä–ø–∏—Ç–µ —É–µ–± –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ UniFi Controller –Ω–∞ –∞–¥—Ä–µ—Å: \033[1;36mhttps://$CONTAINER_IP:8443\033[0m"
    log_message "–£–≤–µ—Ä–µ—Ç–µ —Å–µ, —á–µ –ø—Ä–∞–≤–∏–ª–∞—Ç–∞ –Ω–∞ –∑–∞—â–∏—Ç–Ω–∞—Ç–∞ —Å—Ç–µ–Ω–∞ –ø–æ–∑–≤–æ–ª—è–≤–∞—Ç —Ç—Ä–∞—Ñ–∏–∫ –∫—ä–º –ø–æ—Ä—Ç 8443 (–∏ 8080, 8443, 3478/udp, 10001/udp, –∞–∫–æ –µ –ø—Ä–∏–ª–æ–∂–∏–º–æ)."
    log_message "–ü—Ä–æ–≤–µ—Ä–µ—Ç–µ —Å—ä—Å—Ç–æ—è–Ω–∏–µ—Ç–æ –Ω–∞ —É—Å–ª—É–≥–∞—Ç–∞ UniFi —Å: systemctl status unifi"
    log_message "–õ–æ–≥–æ–≤–µ—Ç–µ –Ω–∞ UniFi –º–æ–∂–µ –¥–∞ –≤–∏–¥–∏—Ç–µ —Å: tail -f /var/log/unifi/server.log"
    log_message "\033[1;35müéâ –í—Å–∏—á–∫–∏ –∑–∞–¥–∞—á–∏ –ø—Ä–∏–∫–ª—é—á–∏—Ö–∞! –í–∞—à–∏—è—Ç UniFi Controller –≤–µ—á–µ —Ç—Ä—è–±–≤–∞ –¥–∞ –µ –¥–æ—Å—Ç—ä–ø–µ–Ω. üéâ\033[0m"
}

main() {
    log_message "–°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ UniFi Controller."
    check_root
    detect_distro_info
    install_prerequisites
    add_unifi_repo
    add_mongodb_repo
    perform_apt_update
    install_java
    install_unifi
    check_unifi_status
    print_final_info
}

main "$@"
exit 0
