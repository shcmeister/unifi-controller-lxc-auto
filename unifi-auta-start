#!/bin/bash

# ==============================================
# –°–∫—Ä–∏–ø—Ç –∑–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ UniFi Controller
# –≤ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ Proxmox VE
# –í–µ—Ä—Å–∏—è: 2.0
# –ê–≤—Ç–æ—Ä: –í–∞—à–∏—è—Ç –∞—Å–∏—Å—Ç–µ–Ω—Ç üòä
# ==============================================

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ ---
CTID=$(pvesh get /cluster/nextid)      # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ ID
HOSTNAME="unifi-${CTID}"               # –ò–º–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
TEMPLATE="debian-12-standard_12.7-1_amd64.tar.zst"  # –®–∞–±–ª–æ–Ω –∑–∞ Debian 12
MEMORY=2048                            # –ü–∞–º–µ—Ç –≤ MB (2GB)
SWAP=512                               # Swap –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤ MB
DISK_SIZE="10G"                        # –†–∞–∑–º–µ—Ä –Ω–∞ –¥–∏—Å–∫–∞
CORES=2                                # –ë—Ä–æ–π CPU —è–¥—Ä–∞
MONGO_VERSION="7.0"                    # –í–µ—Ä—Å–∏—è –Ω–∞ MongoDB
UNIFI_VERSION="stable"                 # –í–µ—Ä—Å–∏—è –Ω–∞ UniFi (stable/rc)
TIMEZONE="Europe/Sofia"                # –í—Ä–µ–º–µ–≤–∞ –∑–æ–Ω–∞

# --- –¶–≤–µ—Ç–æ–≤–µ –∑–∞ output ---
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# --- –§—É–Ω–∫—Ü–∏—è –∑–∞ –ª–æ–≥–≤–∞–Ω–µ ---
log() {
    local level=$1
    local message=$2
    local timestamp=$(date +"%Y-%m-%d %H:%M:%S")
    
    case $level in
        "INFO") echo -e "${BLUE}[${timestamp}] INFO: ${message}${NC}" ;;
        "WARN") echo -e "${YELLOW}[${timestamp}] WARN: ${message}${NC}" ;;
        "ERROR") echo -e "${RED}[${timestamp}] ERROR: ${message}${NC}" ;;
        "SUCCESS") echo -e "${GREEN}[${timestamp}] SUCCESS: ${message}${NC}" ;;
        *) echo -e "[${timestamp}] ${message}" ;;
    esac
}

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ root –∏ Proxmox —Å—Ä–µ–¥–∞ ---
check_environment() {
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ä–µ–¥–∞—Ç–∞..."
    
    if [[ $EUID -ne 0 ]]; then
        log "ERROR" "–¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –∫–∞—Ç–æ root!"
        exit 1
    fi
    
    if ! command -v pct &> /dev/null; then
        log "ERROR" "–ö–æ–º–∞–Ω–¥–∞—Ç–∞ 'pct' –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–∞. –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç –µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –∑–∞ Proxmox VE!"
        exit 1
    fi
    
    if pct status $CTID &> /dev/null; then
        log "ERROR" "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å ID $CTID –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞!"
        exit 1
    fi
}

# --- –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –Ω–∞–π-–ø–æ–¥—Ö–æ–¥—è—â–∏—è storage ---
find_best_storage() {
    log "INFO" "–¢—ä—Ä—Å–µ–Ω–µ –Ω–∞ –Ω–∞–π-–ø–æ–¥—Ö–æ–¥—è—â storage..."
    
    local best_storage=$(pvesm status --type dir,lvmthin,zfspool | awk '
        BEGIN {
            name_col = 0;
            avail_col = 0;
            type_col = 0;
        }
        NR==1 {
            for (i=1; i<=NF; i++) {
                if ($i == "Storage") name_col = i;
                if ($i == "Avail") avail_col = i;
                if ($i == "Type") type_col = i;
            }
            next;
        }
        {
            if ($type_col !~ /(dir|lvmthin|zfspool)/) next;
            
            storage = $name_col;
            avail = $avail_col;
            
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–Ω–µ –≤ –º–µ–≥–∞–±–∞–π—Ç–∏
            if (avail ~ /T$/) { size = avail * 1024 * 1024; }
            else if (avail ~ /G$/) { size = avail * 1024; }
            else if (avail ~ /M$/) { size = avail; }
            else { size = 0; }
            
            if (size > 0) {
                print storage, size;
            }
        }
    ' | sort -k2 -nr | head -n1 | awk '{print $1}')
    
    if [ -z "$best_storage" ]; then
        log "ERROR" "–ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â storage!"
        exit 1
    fi
    
    echo "$best_storage"
}

# --- –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ---
create_container() {
    local storage=$1
    log "INFO" "–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ —à–∞–±–ª–æ–Ω–∞
    if ! pveam list $storage | grep -q "$TEMPLATE"; then
        log "INFO" "–°–≤–∞–ª—è–Ω–µ –Ω–∞ —à–∞–±–ª–æ–Ω $TEMPLATE..."
        pveam download $storage $TEMPLATE || {
            log "ERROR" "–ù–µ—É—Å–ø–µ—à–Ω–æ —Å–≤–∞–ª—è–Ω–µ –Ω–∞ —à–∞–±–ª–æ–Ω!";
            exit 1;
        }
    fi

    # –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –ø–∞—Ä–æ–ª–∞
    local root_pass=$(openssl rand -base64 12)
    log "INFO" "–ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–∞ root –ø–∞—Ä–æ–ª–∞: $root_pass"
    
    # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    pct create $CTID "$storage:vztmpl/$TEMPLATE" \
        --storage $storage \
        --hostname $HOSTNAME \
        --memory $MEMORY \
        --swap $SWAP \
        --cores $CORES \
        --rootfs "$storage:$DISK_SIZE" \
        --net0 name=eth0,bridge=vmbr0,ip=dhcp \
        --unprivileged 1 \
        --onboot 1 \
        --password "$root_pass" \
        --features nesting=1 \
        --timezone $TIMEZONE || {
            log "ERROR" "–ù–µ—É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä!";
            exit 1;
        }
    
    log "SUCCESS" "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç –µ —Å—ä–∑–¥–∞–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
}

# --- –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ---
setup_container() {
    log "INFO" "–°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CTID..."
    pct start $CTID || {
        log "ERROR" "–ù–µ—É—Å–ø–µ—à–Ω–æ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä!";
        exit 1;
    }
    
    # –ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ IP –∞–¥—Ä–µ—Å
    log "INFO" "–ò–∑—á–∞–∫–≤–∞–Ω–µ –∑–∞ IP –∞–¥—Ä–µ—Å..."
    local ip=""
    for i in {1..10}; do
        ip=$(pct exec $CTID ip -4 -o addr show eth0 | awk '{print $4}' | cut -d'/' -f1)
        [ -n "$ip" ] && break
        sleep 3
    done
    
    if [ -z "$ip" ]; then
        log "ERROR" "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç –Ω–µ –ø–æ–ª—É—á–∏ IP –∞–¥—Ä–µ—Å!"
        exit 1
    fi
    
    log "SUCCESS" "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç –ø–æ–ª—É—á–∏ IP: $ip"
    
    # –ò–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ UniFi Controller
    log "INFO" "–ó–∞–ø–æ—á–≤–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ UniFi Controller..."
    pct exec $CTID -- bash -c '
        set -e
        
        # –§—É–Ω–∫—Ü–∏—è –∑–∞ –ª–æ–≥–≤–∞–Ω–µ –≤—ä—Ç—Ä–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        log() {
            echo "[$(date "+%Y-%m-%d %H:%M:%S")] $1"
        }
        
        log "–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –ø–∞–∫–µ—Ç–Ω–∏—Ç–µ —Å–ø–∏—Å—ä—Ü–∏..."
        apt-get update -q
        
        log "–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∏ –ø–∞–∫–µ—Ç–∏..."
        DEBIAN_FRONTEND=noninteractive apt-get install -yq \
            curl gnupg2 apt-transport-https wget lsb-release ca-certificates ufw
        
        log "–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞..."
        # MongoDB
        wget -qO - https://www.mongodb.org/static/pgp/server-'$MONGO_VERSION'.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/mongodb.gpg
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu $(lsb_release -sc)/mongodb-org/'$MONGO_VERSION' multiverse" > /etc/apt/sources.list.d/mongodb-org.list
        
        # UniFi
        wget -qO - https://dl.ui.com/unifi/unifi-repo.gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/unifi-repo.gpg
        echo "deb [arch=amd64] https://dl.ui.com/unifi/debian '$UNIFI_VERSION' ubiquiti" > /etc/apt/sources.list.d/unifi.list
        
        log "–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –ø–∞–∫–µ—Ç–Ω–∏—Ç–µ —Å–ø–∏—Å—ä—Ü–∏..."
        apt-get update -q
        
        log "–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ Java..."
        apt-get install -yq openjdk-17-jre-headless
        
        log "–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ UniFi Controller..."
        apt-get install -yq unifi
        
        log "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∑–∞—â–∏—Ç–Ω–∞—Ç–∞ —Å—Ç–µ–Ω–∞..."
        ufw allow 8080/tcp    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        ufw allow 8443/tcp    # –£–ø—Ä–∞–≤–ª—è–≤–∞—â –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        ufw allow 3478/udp    # STUN
        ufw allow 10001/udp   # AP discovery
        ufw --force enable
        
        log "–ü–æ—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∞..."
        apt-get autoremove -yq
        apt-get clean
        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
        
        log "–†–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —É—Å–ª—É–≥–∞—Ç–∞ UniFi..."
        systemctl restart unifi
    ' || {
        log "ERROR" "–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞!";
        exit 1;
    }
    
    log "SUCCESS" "–ò–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞ –∑–∞–≤—ä—Ä—à–∏ —É—Å–ø–µ—à–Ω–æ!"
}

# --- –ì–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è ---
main() {
    clear
    echo -e "${GREEN}"
    echo "=============================================="
    echo " –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ UniFi Controller"
    echo " –≤ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ Proxmox VE"
    echo "=============================================="
    echo -e "${NC}"
    
    check_environment
    
    local storage=$(find_best_storage)
    log "INFO" "–ò–∑–±—Ä–∞–Ω storage: $storage"
    
    create_container "$storage"
    setup_container
    
    local ip=$(pct exec $CTID ip -4 -o addr show eth0 | awk '{print $4}' | cut -d'/' -f1)
    
    echo -e "${GREEN}"
    echo "=============================================="
    echo " –ò–ù–°–¢–ê–õ–ê–¶–ò–Ø–¢–ê –ó–ê–í–™–†–®–ò –£–°–ü–ï–®–ù–û!"
    echo "=============================================="
    echo -e "${NC}"
    echo -e " ${BLUE}‚óè${NC} –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ID: ${YELLOW}$CTID${NC}"
    echo -e " ${BLUE}‚óè${NC} –ò–º–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: ${YELLOW}$HOSTNAME${NC}"
    echo -e " ${BLUE}‚óè${NC} IP –∞–¥—Ä–µ—Å: ${YELLOW}$ip${NC}"
    echo -e " ${BLUE}‚óè${NC} UniFi –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: ${YELLOW}https://$ip:8443${NC}"
    echo -e " ${BLUE}‚óè${NC} Root –ø–∞—Ä–æ–ª–∞: ${YELLOW}$root_pass${NC}"
    echo -e "${GREEN}"
    echo " –ó–∞–±–µ–ª–µ–∂–∫–∞: –ú–æ–∂–µ –¥–∞ –æ—Ç–Ω–µ–º–µ 2-3 –º–∏–Ω—É—Ç–∏, –¥–æ–∫–∞—Ç–æ"
    echo " UniFi —É—Å–ª—É–≥–∞—Ç–∞ –Ω–∞–ø—ä–ª–Ω–æ —Å–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞."
    echo "=============================================="
    echo -e "${NC}"
}

# –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è
main
