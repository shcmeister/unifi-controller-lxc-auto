#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∑–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å UniFi Network Controller –Ω–∞ Proxmox
# –ò–∑–ø–æ–ª–∑–≤–∞–Ω–µ:
#   ./install_unifi.sh [CTID] [WAIT_IP_TIMEOUT]
# CTID - ID –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–ª–µ–¥–≤–∞—â–æ—Ç–æ —Å–≤–æ–±–æ–¥–Ω–æ)
# WAIT_IP_TIMEOUT - –≤—Ä–µ–º–µ –≤ —Å–µ–∫—É–Ω–¥–∏ –∑–∞ –∏–∑—á–∞–∫–≤–∞–Ω–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç –¥–∞ –ø–æ–ª—É—á–∏ IP (–ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ 30)

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
CTID=${1:-$(pvesh get /cluster/nextid)}
WAIT_IP_TIMEOUT=${2:-30}

HOSTNAME="unifi-$CTID"
TEMPLATE="debian-12-standard_12.7-1_amd64.tar.zst"
MEMORY=2048
DISK_SIZE=10
CORES=2
MONGO_VERSION="7.0"

log_message() {
    echo -e "\033[1;34m--- $(date +'%Y-%m-%d %H:%M:%S') --- $1\033[0m"
}

if [[ $EUID -ne 0 ]]; then
    echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞: –°–∫—Ä–∏–ø—Ç—ä—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ —Å–µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞ –∫–∞—Ç–æ root –Ω–∞ Proxmox —Ö–æ—Å—Ç!\033[0m"
    exit 1
fi

if ! command -v pct >/dev/null 2>&1; then
    echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞: 'pct' –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–∞. –ò–∑–ø—ä–ª–Ω—è–≤–∞–π—Ç–µ –Ω–∞ Proxmox —Ö–æ—Å—Ç.\033[0m"
    exit 1
fi

log_message "–°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ UniFi LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å ID $CTID"

if pct status $CTID &>/dev/null; then
    echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å ID $CTID –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞. –ò–∑–±–µ—Ä–µ—Ç–µ –¥—Ä—É–≥ CTID.\033[0m"
    exit 1
fi

get_best_storage() {
    local pvesm_output
    pvesm_output=$(pvesm status 2>&1)
    if [ $? -ne 0 ]; then
        log_message "–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ 'pvesm status': $pvesm_output"
        return 1
    fi

    echo "$pvesm_output" | awk '
        NR==1 {
            for (i=1; i<=NF; i++) {
                if ($i == "Storage") NAME=i;
                if ($i == "Type") TYPE=i;
                if ($i == "Avail") AVAIL=i;
            }
            next
        }
        {
            name=$NAME; type=$TYPE; avail=$AVAIL
            if (name ~ /(iso|backup)/ || type !~ /(dir|lvmthin|zfspool)/ || name == "") next

            size=0; num=avail; unit=""
            if (avail ~ /[KMGTPEkmgtpe]$/) {
                unit=substr(avail,length(avail))
                num=substr(avail,1,length(avail)-1)
            }
            if (num ~ /^[0-9.]+$/) {
                if (unit ~ /[Kk]/) size=num/1024
                else if (unit ~ /[Mm]/) size=num
                else if (unit ~ /[Gg]/) size=num*1024
                else if (unit ~ /[Tt]/) size=num*1024*1024
                else size=num
            }
            if (size>0) print name, size
        }
    ' | sort -nrk2 | head -n1 | awk '{print $1}'
}

log_message "–ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ storage —Å –Ω–∞–π-–º–Ω–æ–≥–æ —Å–≤–æ–±–æ–¥–Ω–æ –º—è—Å—Ç–æ..."
BEST_STORAGE=$(get_best_storage)
if [ -z "$BEST_STORAGE" ]; then
    echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞: –ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â storage.\033[0m"
    exit 1
fi
log_message "–ò–∑–±—Ä–∞–Ω storage: $BEST_STORAGE"

log_message "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ —à–∞–±–ª–æ–Ω $TEMPLATE..."
if ! pveam list $BEST_STORAGE | grep -q "$TEMPLATE"; then
    log_message "–°–≤–∞–ª—è–Ω–µ –Ω–∞ —à–∞–±–ª–æ–Ω $TEMPLATE..."
    pveam download $BEST_STORAGE $TEMPLATE || { echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞: –ù–µ—É—Å–ø–µ—à–Ω–æ —Å–≤–∞–ª—è–Ω–µ –Ω–∞ —à–∞–±–ª–æ–Ω–∞.\033[0m"; exit 1; }
    log_message "–®–∞–±–ª–æ–Ω—ä—Ç –µ —Å–≤–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ."
else
    log_message "–®–∞–±–ª–æ–Ω—ä—Ç –µ –Ω–∞–ª–∏—á–µ–Ω."
fi

ROOTPASS=$(openssl rand -base64 12)
log_message "–ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–∞ root –ø–∞—Ä–æ–ª–∞ –∑–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞: $ROOTPASS"

log_message "–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CTID ($HOSTNAME)..."
pct create $CTID "$BEST_STORAGE:vztmpl/$TEMPLATE" \
    -storage "$BEST_STORAGE" \
    -hostname "$HOSTNAME" \
    -memory "$MEMORY" \
    -cores "$CORES" \
    -rootfs "${BEST_STORAGE}:${DISK_SIZE}" \
    -net0 name=eth0,bridge=vmbr0,ip=dhcp \
    -unprivileged 1 \
    -onboot 1 \
    -password "$ROOTPASS" \
    -features nesting=1 || { echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.\033[0m"; exit 1; }
log_message "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç –µ —Å—ä–∑–¥–∞–¥–µ–Ω."

log_message "–°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CTID..."
pct start $CTID || { echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.\033[0m"; exit 1; }
log_message "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω."

log_message "–ò–∑—á–∞–∫–≤–∞–Ω–µ –Ω–∞ IP –∞–¥—Ä–µ—Å (–¥–æ $WAIT_IP_TIMEOUT —Å–µ–∫—É–Ω–¥–∏)..."
CONTAINER_IP=""
SLEEP_INTERVAL=5
MAX_ITER=$((WAIT_IP_TIMEOUT / SLEEP_INTERVAL))

for i in $(seq 1 $MAX_ITER); do
    sleep $SLEEP_INTERVAL
    CONTAINER_IP=$(pct exec $CTID -- hostname -I | awk '{print $1}')
    if [ -n "$CONTAINER_IP" ]; then
        break
    fi
done

if [ -z "$CONTAINER_IP" ]; then
    echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç –Ω–µ –ø–æ–ª—É—á–∏ IP –≤ –∑–∞–¥–∞–¥–µ–Ω–æ—Ç–æ –≤—Ä–µ–º–µ.\033[0m"
    exit 1
fi
log_message "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ä—Ç –ø–æ–ª—É—á–∏ IP: $CONTAINER_IP"

log_message "–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ UniFi Controller –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
pct exec $CTID -- bash -c "
    set -e
    echo '--- $(date +'%Y-%m-%d %H:%M:%S') --- –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ UniFi Controller ---'

    apt-get update
    apt-get install -y curl gnupg apt-transport-https wget lsb-release ca-certificates

    wget -qO - https://dl.ui.com/unifi/unifi-repo.gpg | apt-key add -
    echo 'deb https://dl.ui.com/unifi/debian stable ubiquiti' > /etc/apt/sources.list.d/100-ubnt-unifi.list

    DISTRO_ID=\$(lsb_release -is | tr '[:upper:]' '[:lower:]')
    DISTRO_CODENAME=\$(lsb_release -cs)
    MONGO_REPO_TYPE='debian'
    if [ \"\$DISTRO_ID\" = 'ubuntu' ]; then
        MONGO_REPO_TYPE='ubuntu'
    fi

    wget -qO - https://www.mongodb.org/static/pgp/server-$MONGO_VERSION.asc | apt-key add -
    echo \"deb http://repo.mongodb.org/apt/\$MONGO_REPO_TYPE \$DISTRO_CODENAME/mongodb-org/$MONGO_VERSION main\" > /etc/apt/sources.list.d/mongodb-org-$MONGO_VERSION.list

    apt-get clean
    apt-get update

    apt-get install -y openjdk-17-jre-headless unifi

    apt-get clean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
"

if [ $? -ne 0 ]; then
    echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞ –Ω–∞ UniFi Controller.\033[0m"
    exit 1
fi

echo -e "\n\033[1;32m‚úÖ UniFi LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CTID –µ —Å—ä–∑–¥–∞–¥–µ–Ω –∏ UniFi Controller –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!\033[0m"
echo -e "\033[1;36müåê –î–æ—Å—Ç—ä–ø –¥–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞: https://$CONTAINER_IP:8443\033[0m"
echo -e "\033[1;35müîë Root –ø–∞—Ä–æ–ª–∞ –∑–∞ SSH: \033[1;33m$ROOTPASS\033[0m"
echo -e "\033[1;33m‚ö† –ó–∞–ø–∏—à–µ—Ç–µ –ø–∞—Ä–æ–ª–∞—Ç–∞ –Ω–∞ —Å–∏–≥—É—Ä–Ω–æ –º—è—Å—Ç–æ! –°–ª–µ–¥ —Ç–æ–≤–∞ —Å—ä–∑–¥–∞–π—Ç–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª —Å—ä—Å sudo –∏ –∑–∞–±—Ä–∞–Ω–µ—Ç–µ root SSH.\033[0m"

exit 0
