get_best_storage() {
    local pvesm_output
    # Правилно извикване без грешен параметър
    pvesm_output=$(pvesm status 2>&1)
    local pvesm_status_code=$?

    if [ "$pvesm_status_code" -ne 0 ]; then
        log_message "Грешка при изпълнение на 'pvesm status': $pvesm_output"
        return 1
    fi

    echo "$pvesm_output" | awk '
        BEGIN {
            NAME_COL=-1; AVAIL_COL=-1;
            # Функция за конвертиране в MB
            function convert_to_mb(size_str) {
                if (size_str ~ /[KMGTPEkmgtpe]$/) {
                    unit_char = substr(size_str, length(size_str));
                    size_num = substr(size_str, 1, length(size_str)-1);
                    if (size_num !~ /^[0-9.]+$/) return 0;
                    num_value = size_num + 0;
                    if (unit_char == "K" || unit_char == "k") return num_value / 1024;
                    else if (unit_char == "M" || unit_char == "m") return num_value;
                    else if (unit_char == "G" || unit_char == "g") return num_value * 1024;
                    else if (unit_char == "T" || unit_char == "t") return num_value * 1024 * 1024;
                    else if (unit_char == "P" || unit_char == "p") return num_value * 1024 * 1024 * 1024;
                    else if (unit_char == "E" || unit_char == "e") return num_value * 1024 * 1024 * 1024 * 1024;
                } else if (size_str ~ /^[0-9.]+$/) {
                    return size_str + 0;
                }
                return 0;
            }
        }
        NR==1 {
            for (i=1; i<=NF; i++) {
                if ($i == "Name") NAME_COL=i;
                if ($i == "Avail") AVAIL_COL=i;
            }
            if (NAME_COL == -1 || AVAIL_COL == -1) {
                print "Error: Не са намерени колони 'Name' или 'Avail' в изхода на pvesm status." > "/dev/stderr";
                exit 1;
            }
            next;
        }
        {
            storage_name = $NAME_COL;
            avail_size_str = $AVAIL_COL;
            if (storage_name ~ /iso|backup/ || storage_name == "rootfs" || storage_name == "") {
                next;
            }
            avail_mb = convert_to_mb(avail_size_str);
            if (avail_mb > 0) {
                print storage_name, avail_mb;
            }
        }
    ' | sort -nrk2 | head -n1 | awk '{print $1}'
}
