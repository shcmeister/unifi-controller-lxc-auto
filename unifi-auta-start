#!/bin/bash

# –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç —Å–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –Ω–∞ Proxmox —Ö–æ—Å—Ç.
# –¢–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ—Ç–æ –Ω–∞ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –ø—ä–ª–Ω–∞—Ç–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ UniFi Network Controller –≤—ä—Ç—Ä–µ –≤ –Ω–µ–≥–æ.

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ---
CTID=$(pvesh get /cluster/nextid) # ID –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —â–µ –±—ä–¥–µ —Å–ª–µ–¥–≤–∞—â–æ—Ç–æ –Ω–∞–ª–∏—á–Ω–æ ID)
HOSTNAME="unifi-$CTID"        # –ò–º–µ –Ω–∞ —Ö–æ—Å—Ç–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (—â–µ –≤–∫–ª—é—á–≤–∞ ID –∑–∞ —É–Ω–∏–∫–∞–ª–Ω–æ—Å—Ç)
TEMPLATE="debian-12-standard_12.7-1_amd64.tar.zst" # –®–∞–±–ª–æ–Ω –Ω–∞ –û–°
MEMORY=2048                   # RAM –≤ MB (2GB –ø—Ä–µ–ø–æ—Ä—ä—á–∏—Ç–µ–ª–Ω–æ –∑–∞ UniFi)
DISK_SIZE=10                  # –†–∞–∑–º–µ—Ä –Ω–∞ –¥–∏—Å–∫–∞ –≤ GB (10GB –µ –¥–æ–±—Ä–æ –Ω–∞—á–∞–ª–æ)
CORES=2                       # –ë—Ä–æ–π CPU —è–¥—Ä–∞
MONGO_VERSION="7.0"           # –í–µ—Ä—Å–∏—è –Ω–∞ MongoDB, —Å—ä–≤–º–µ—Å—Ç–∏–º–∞ —Å UniFi

# --- –õ–æ–≥ —Ñ—É–Ω–∫—Ü–∏—è ---
log_message() {
    echo -e "\033]; then
    echo -e "\033; then
        log_message "–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ 'pvesm status': $pvesm_output"
        return 1 # –ò–Ω–¥–∏–∫–∏—Ä–∞ –ø—Ä–æ–≤–∞–ª –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞
    fi

    echo "$pvesm_output" | awk '
        BEGIN {
            NAME_COL=-1; TYPE_COL=-1; AVAIL_COL=-1; # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –∏–Ω–¥–µ–∫—Å–∏—Ç–µ –Ω–∞ –∫–æ–ª–æ–Ω–∏—Ç–µ
        }
        NR==1 { # –ó–∞–≥–ª–∞–≤–µ–Ω —Ä–µ–¥, –æ–ø—Ä–µ–¥–µ–ª—è–Ω–µ –Ω–∞ –∏–Ω–¥–µ–∫—Å–∏—Ç–µ –Ω–∞ –∫–æ–ª–æ–Ω–∏—Ç–µ
            for (i=1; i<=NF; i++) {
                if ($i == "Storage") NAME_COL=i;
                if ($i == "Type") TYPE_COL=i;
                if ($i == "Avail") AVAIL_COL=i;
            }
            if (NAME_COL == -1 |
| TYPE_COL == -1 |
| AVAIL_COL == -1) {
                print "Error: Could not find \'Storage\', \'Type\', or \'Avail\' columns in pvesm status output." > "/dev/stderr";
                exit 1; # –ü—Ä–µ–∫—Ä–∞—Ç—è–≤–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ—Ç–æ –Ω–∞ awk
            }
            next; # –ü—Ä–µ—Å–∫–∞—á–∞ –∑–∞–≥–ª–∞–≤–Ω–∏—è —Ä–µ–¥
        }
        {
            # –ò–∑–ø–æ–ª–∑–≤–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—Ç–µ –∏–Ω–¥–µ–∫—Å–∏ –Ω–∞ –∫–æ–ª–æ–Ω–∏—Ç–µ
            storage_name=$NAME_COL
            storage_type=$TYPE_COL
            avail_size_str=$AVAIL_COL

            # –ò–∑–∫–ª—é—á–≤–∞ —Å—Ç–æ—Ä–∏–¥–∂–∏, –∫–æ–∏—Ç–æ –Ω–µ —Å–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏ –∑–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ (–Ω–∞–ø—Ä. iso, backup)
            # –§–∏–ª—Ç—Ä–∏—Ä–∞ –ø–æ —Ç–∏–ø (dir, lvmthin, zfspool)
            if (storage_name ~ /(iso|backup)/ |
| storage_type!~ /(dir|lvmthin|zfspool)/ |
| storage_name == "") {
                next;
            }
            
            # --- –õ–æ–≥–∏–∫–∞ –∑–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–Ω–µ –Ω–∞ —Ä–∞–∑–º–µ—Ä –≤ –º–µ–≥–∞–±–∞–π—Ç–∏ (–≤–≥—Ä–∞–¥–µ–Ω–∞, –±–µ–∑ —Ñ—É–Ω–∫—Ü–∏–∏) ---
            avail_mb = 0; # Default to 0
            # –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ —á–∏—Å–ª–æ–≤–∞—Ç–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç –∏ –µ–¥–∏–Ω–∏—Ü–∞
            num_value = avail_size_str;
            unit_char = "";
            if (avail_size_str ~ /$/) {
                unit_char = substr(avail_size_str, length(avail_size_str));
                num_value = substr(avail_size_str, 1, length(avail_size_str)-1);
            }

            if (num_value ~ /^[0-9.]+$/) {
                if (unit_char == "K" |
| unit_char == "k") avail_mb = num_value / 1024; # KB to MB
                else if (unit_char == "M" |
| unit_char == "m") avail_mb = num_value; # MB to MB
                else if (unit_char == "G" |
| unit_char == "g") avail_mb = num_value * 1024; # GB to MB
                else if (unit_char == "T" |
| unit_char == "t") avail_mb = num_value * 1024 * 1024; # TB to MB
                else if (unit_char == "P" |
| unit_char == "p") avail_mb = num_value * 1024 * 1024 * 1024; # PB to MB
                else if (unit_char == "E" |
| unit_char == "e") avail_mb = num_value * 1024 * 1024 * 1024 * 1024; # EB to MB
                else if (unit_char == "") avail_mb = num_value; # –ê–∫–æ –Ω—è–º–∞ –µ–¥–∏–Ω–∏—Ü–∞, –ø—Ä–∏–µ–º–∞–º–µ MB
            }
            # --- –ö—Ä–∞–π –Ω–∞ –≤–≥—Ä–∞–¥–µ–Ω–∞—Ç–∞ –ª–æ–≥–∏–∫–∞ ---

            if (avail_mb > 0) { # –°–∞–º–æ –∞–∫–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–Ω–µ—Ç–æ –µ —É—Å–ø–µ—à–Ω–æ –∏ —Å—Ç–æ–π–Ω–æ—Å—Ç—Ç–∞ –µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª–Ω–∞
                print storage_name, avail_mb
            }
        }
    ' | sort -nrk2 | head -n1 | awk '{print $1}' # –°–æ—Ä—Ç–∏—Ä–∞ —á–∏—Å–ª–µ–Ω–æ –ø–æ MB –∏ –≤–∑–∏–º–∞ –∏–º–µ—Ç–æ –Ω–∞ —Å—Ç–æ—Ä–∏–¥–∂–∞
}

# --- –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –Ω–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ storage ---
log_message "–ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ storage —Å –Ω–∞–π-–º–Ω–æ–≥–æ —Å–≤–æ–±–æ–¥–Ω–æ –º—è—Å—Ç–æ..."
BEST_STORAGE=$(get_best_storage)
if; then
    echo -e "\033; then
        echo -e "\033; then
    echo -e "\033; then
    echo -e "\033; then
        break # –ò–∑–ª–∏–∑–∞ –æ—Ç —Ü–∏–∫—ä–ª–∞, –∞–∫–æ IP –µ –Ω–∞–º–µ—Ä–µ–Ω–æ
    fi
done

if; then
    echo -e "\033 https://dl.ui.com/unifi/debian stable ubiquiti' | tee /etc/apt/sources.list.d/100-ubnt-unifi.list >/dev/null
    if [ \$? -ne 0 ]; then log_message_inner \"–ì—Ä–µ—à–∫–∞: –ù–µ—É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ UniFi —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.\"; exit 1; fi

    log_message_inner \"–î–æ–±–∞–≤—è–Ω–µ –Ω–∞ MongoDB —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏ GPG –∫–ª—é—á –∑–∞ –≤–µ—Ä—Å–∏—è $MONGO_VERSION (signed-by)...\"
    DISTRO_ID_INNER=\$(lsb_release -is | tr '[:upper:]' '[:lower:]')
    DISTRO_CODENAME_INNER=\$(lsb_release -cs)
    MONGO_REPO_TYPE_INNER=\"debian\"
    if; then
        MONGO_REPO_TYPE_INNER=\"ubuntu\"
    fi
    # –ó–∞ MongoDB
    if! wget -qO- https://www.mongodb.org/static/pgp/server-$MONGO_VERSION.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/mongodb-archive-keyring.gpg; then
        log_message_inner \"–ì—Ä–µ—à–∫–∞: –ù–µ—É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ MongoDB GPG –∫–ª—é—á.\"
        exit 1
    fi
    echo \"deb [signed-by=/etc/apt/trusted.gpg.d/mongodb-archive-keyring.gpg] http://repo.mongodb.org/apt/\$MONGO_REPO_TYPE_INNER \$DISTRO_CODENAME_INNER/mongodb-org/$MONGO_VERSION main\" | tee /etc/apt/sources.list.d/mongodb-org-$MONGO_VERSION.list >/dev/null
    if [ \$? -ne 0 ]; then log_message_inner \"–ì—Ä–µ—à–∫–∞: –ù–µ—É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ MongoDB —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.\"; exit 1; fi

    log_message_inner \"–ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ apt –∫–µ—à–∞ –∏ –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ —Å–ø–∏—Å—ä—Ü–∏—Ç–µ —Å –ø–∞–∫–µ—Ç–∏ (—Å –ø–æ–≤—Ç–æ—Ä–Ω–∏ –æ–ø–∏—Ç–∏)...\"
    # Retry logic –∑–∞ apt update
    for apt_retry_count in {1..5}; do
        apt-get clean
        if apt-get update; then
            log_message_inner \"apt update —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏ –æ–ø–∏—Ç \$apt_retry_count.\"
            break
        else
            log_message_inner \"apt update —Å–µ –ø—Ä–æ–≤–∞–ª–∏ –ø—Ä–∏ –æ–ø–∏—Ç \$apt_retry_count. –ò–∑—á–∞–∫–≤–∞–Ω–µ 5 —Å–µ–∫—É–Ω–¥–∏ –ø—Ä–µ–¥–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω –æ–ø–∏—Ç...\"
            sleep 5
        fi
        if [ \$apt_retry_count -eq 5 ]; then
            log_message_inner \"–ì—Ä–µ—à–∫–∞: apt update —Å–µ –ø—Ä–æ–≤–∞–ª–∏ —Å–ª–µ–¥ 5 –æ–ø–∏—Ç–∞. –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ, –Ω–æ –º–æ–∂–µ –¥–∞ –∏–º–∞ –ø—Ä–æ–±–ª–µ–º–∏ —Å—ä—Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏—Ç–µ.\"
        fi
    done

    log_message_inner \"–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ OpenJDK 17 JRE...\"
    apt-get install -y openjdk-17-jre-headless

    log_message_inner \"–ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ UniFi Network Controller...\"
    apt-get install -y unifi

    log_message_inner \"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∑–∞—â–∏—Ç–Ω–∞ —Å—Ç–µ–Ω–∞ (UFW)...\"
    ufw allow 8080/tcp # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ UniFi —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    ufw allow 8443/tcp # Web UI –∑–∞ Controller
    ufw allow 3478/udp # STUN (–∑–∞ VOIP –∏ –¥—Ä.)
    ufw --force enable # –ê–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ UFW –±–µ–∑ –ø–æ–¥–∫–∞–Ω–∞ –∑–∞ –ø–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ
    log_message_inner \"UFW –µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω. –ü–æ—Ä—Ç–æ–≤–µ—Ç–µ 8080, 8443 (TCP) –∏ 3478 (UDP) —Å–∞ –æ—Ç–≤–æ—Ä–µ–Ω–∏.\"

    log_message_inner \"–ü–æ—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –Ω–µ–Ω—É–∂–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ –∏ –∫–µ—à –≤—ä—Ç—Ä–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...\"
    apt-get clean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
"
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ exit status –Ω–∞ pct exec –∫–æ–º–∞–Ω–¥–∞—Ç–∞
if [ $? -ne 0 ]; then
    echo -e "\033[1;31m–ì—Ä–µ—à–∫–∞: –ò–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞ –Ω–∞ UniFi Controller –≤—ä—Ç—Ä–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ $CTID —Å–µ –ø—Ä–æ–≤–∞–ª–∏. –ú–æ–ª—è, –ø—Ä–æ–≤–µ—Ä–µ—Ç–µ –ª–æ–≥–æ–≤–µ—Ç–µ –Ω–∞ Proxmox –∏–ª–∏ –≤–ª–µ–∑—Ç–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑–∞ –ø–æ–≤–µ—á–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\033[0m"
    exit 1
fi
log_message "UniFi Network Controller –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CTID."

# --- –§–∏–Ω–∞–ª–µ–Ω –æ—Ç—á–µ—Ç ---
echo -e "\n\033[1;32m‚úÖ UniFi LXC –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CTID –µ —Å—ä–∑–¥–∞–¥–µ–Ω –∏ UniFi Controller –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!\033[0m"
echo -e "\033[1;35müéâ –ú–æ–ª—è, –∏–∑—á–∞–∫–∞–π—Ç–µ –Ω—è–∫–æ–ª–∫–æ –º–∏–Ω—É—Ç–∏, –¥–æ–∫–∞—Ç–æ UniFi —É—Å–ª—É–≥–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞ –Ω–∞–ø—ä–ª–Ω–æ.\033[0m"
echo -e "\033[1;36müåê UniFi Controller Web Interface: https://$CONTAINER_IP:8443\033[0m"
echo -e "\033[1;35müîë Root –ø–∞—Ä–æ–ª–∞ –∑–∞ SSH –¥–æ—Å—Ç—ä–ø –¥–æ LXC $CTID: \033[1;33m$ROOTPASS\033[0m"
echo -e "\033[1;33m‚ö† –ó–∞–ø–∏—à–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–∞—Ç–∞ root –ø–∞—Ä–æ–ª–∞ –Ω–∞ —Å–∏–≥—É—Ä–Ω–æ –º—è—Å—Ç–æ! –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ —è –∑–∞ –ø—ä—Ä–≤–æ–Ω–∞—á–∞–ª–µ–Ω SSH –¥–æ—Å—Ç—ä–ø.\033[0m"
echo -e "\033[1;33m‚öô –°–ª–µ–¥ –ø—ä—Ä–≤–æ–Ω–∞—á–∞–ª–Ω–∏—è –¥–æ—Å—Ç—ä–ø, –ø—Ä–µ–ø–æ—Ä—ä—á–≤–∞–º–µ –¥–∞ —Å—ä–∑–¥–∞–¥–µ—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–µ–Ω –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª —Å—ä—Å sudo –ø—Ä–∞–≤–∞ –∏ –¥–∞ –∑–∞–±—Ä–∞–Ω–∏—Ç–µ root SSH –¥–æ—Å—Ç—ä–ø–∞.\033[0m"
echo -e "\033[1;35müî• –ì–æ—Ç–æ–≤–æ! –í–∞—à–∏—è—Ç UniFi –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä –≤–µ—á–µ —Ä–∞–±–æ—Ç–∏. üî•\033[0m\n"

exit 0
